#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - –±—Ä–∞—É–∑–µ—Ä –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
"""

import os
import json
import time
from selenium import webdriver
from selenium.webdriver.chrome.options import Options

def setup_driver():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–∞ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å—é"""
    options = Options()
    
    # –ë–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-dev-shm-usage')
    options.add_argument('--disable-blink-features=AutomationControlled')
    options.add_experimental_option("excludeSwitches", ["enable-automation"])
    options.add_experimental_option('useAutomationExtension', False)
    
    # –ö–†–ò–¢–ò–ß–ù–û: –ù–µ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    options.add_experimental_option("detach", True)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    options.add_argument('--disable-web-security')
    options.add_argument('--disable-features=VizDisplayCompositor')
    options.add_argument('--disable-extensions')
    options.add_argument('--disable-plugins')
    options.add_argument('--disable-gpu')
    options.add_argument('--no-first-run')
    options.add_argument('--no-default-browser-check')
    options.add_argument('--disable-default-apps')
    
    # User agent
    options.add_argument('--user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36')
    
    driver = webdriver.Chrome(options=options)
    driver.execute_script("Object.defineProperty(navigator, 'webdriver', {get: () => undefined})")
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç—ã
    driver.implicitly_wait(10)
    driver.set_page_load_timeout(60)
    
    return driver

def save_cookies(driver, filename):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å cookies"""
    try:
        cookies = driver.get_cookies()
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(cookies, f, indent=2, ensure_ascii=False)
        print(f"‚úÖ Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {filename}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies: {e}")
        return False

def save_storage(driver, filename):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å storage –¥–∞–Ω–Ω—ã–µ"""
    try:
        session_storage = driver.execute_script("return window.sessionStorage;")
        local_storage = driver.execute_script("return window.localStorage;")
        
        storage_data = {
            "sessionStorage": session_storage,
            "localStorage": local_storage,
            "timestamp": time.time()
        }
        
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(storage_data, f, indent=2, ensure_ascii=False)
        print(f"‚úÖ Storage —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filename}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è storage: {e}")
        return False

def auth_platform(driver, name, url, success_indicators):
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ –æ–¥–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ"""
    print(f"\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ {name}...")
    print(f"   URL: {url}")
    
    try:
        driver.get(url)
        print(f"   üìù –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ö–æ–¥ –≤ {name}")
        print(f"   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
        print(f"   üí° –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ Enter –≤ –∫–æ–Ω—Å–æ–ª–∏")
        
        # –ñ–¥–µ–º –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        input(f"   ‚úÖ –ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ {name} –∑–∞–≤–µ—Ä—à–µ–Ω–∞...")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        save_cookies(driver, f"cookies_{name.lower().replace(' ', '_')}.json")
        save_storage(driver, f"storage_{name.lower().replace(' ', '_')}.json")
        
        print(f"   ‚úÖ {name} - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        return True
        
    except Exception as e:
        print(f"   ‚ùå {name} - –æ—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü—Ä–æ—Å—Ç–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Meeting Bot")
    print("=" * 50)
    print("‚ö†Ô∏è –í–ê–ñ–ù–û: –ë—Ä–∞—É–∑–µ—Ä –ù–ï –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
    print("‚ö†Ô∏è –í—ã –¥–æ–ª–∂–Ω—ã –±—É–¥–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å –µ–≥–æ –≤—Ä—É—á–Ω—É—é –≤ –∫–æ–Ω—Ü–µ.")
    print("=" * 50)
    
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞...")
    
    driver = None
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
        print("üîß –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...")
        driver = setup_driver()
        print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
        
        # –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        platforms = [
            {
                "name": "Google Meet",
                "url": "https://accounts.google.com/signin",
                "success_indicators": ["myaccount.google.com", "google.com"]
            },
            {
                "name": "Zoom",
                "url": "https://zoom.us/signin", 
                "success_indicators": ["zoom.us/profile", "zoom.us/dashboard"]
            },
            {
                "name": "–Ø–Ω–¥–µ–∫—Å –¢–µ–ª–µ–º–æ—Å—Ç",
                "url": "https://passport.yandex.ru/auth",
                "success_indicators": ["yandex.ru"]
            },
            {
                "name": "–ö–æ–Ω—Ç—É—Ä.–¢–æ–ª–∫",
                "url": "https://login.contour.ru/",
                "success_indicators": ["contour.ru"]
            },
            {
                "name": "Microsoft Teams",
                "url": "https://teams.microsoft.com/",
                "success_indicators": ["teams.microsoft.com"]
            }
        ]
        
        success_count = 0
        
        # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ –∫–∞–∂–¥–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
        for platform in platforms:
            if auth_platform(driver, platform["name"], platform["url"], platform["success_indicators"]):
                success_count += 1
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        print("\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        save_cookies(driver, "selenium_cookies.json")
        save_storage(driver, "storage.json")
        
        print("\n" + "=" * 50)
        print(f"üéâ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print(f"üìä –£—Å–ø–µ—à–Ω–æ: {success_count}/{len(platforms)} –ø–ª–∞—Ç—Ñ–æ—Ä–º")
        print("üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:")
        print("   - selenium_cookies.json")
        print("   - storage.json")
        print("\n‚ö†Ô∏è –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º!")
        print("üí° –ó–∞–∫—Ä–æ–π—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É.")
        print("=" * 50)
        
        # –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä - –æ—Å—Ç–∞–≤–ª—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–º
        print("\nüîß –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –Ω–∞ –≤—Å–µ—Ö –Ω—É–∂–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö.")
        print("üí° –ó–∞–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –≤—Ä—É—á–Ω—É—é –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ.")
        
        # –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É...")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        print("\nüëã –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º.")
        # –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        # if driver:
        #     driver.quit()

if __name__ == "__main__":
    main()
