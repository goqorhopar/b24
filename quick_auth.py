#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
"""

import os
import time
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

def quick_auth():
    """–ë—ã—Å—Ç—Ä–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö"""
    print("üöÄ –ë—ã—Å—Ç—Ä–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Meeting Bot")
    print("=" * 40)
    print("‚ö†Ô∏è –í–ê–ñ–ù–û: –ë—Ä–∞—É–∑–µ—Ä –ù–ï –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!")
    print("=" * 40)
    
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±—Ä–∞—É–∑–µ—Ä–∞...")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–∞
    options = Options()
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-dev-shm-usage')
    options.add_argument('--disable-blink-features=AutomationControlled')
    options.add_experimental_option("excludeSwitches", ["enable-automation"])
    options.add_experimental_option('useAutomationExtension', False)
    
    # –ö–†–ò–¢–ò–ß–ù–û: –ù–µ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    options.add_experimental_option("detach", True)
    
    driver = None
    try:
        driver = webdriver.Chrome(options=options)
        driver.execute_script("Object.defineProperty(navigator, 'webdriver', {get: () => undefined})")
        print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω!")
        
        platforms = [
            {
                "name": "Google Meet",
                "url": "https://accounts.google.com/signin",
                "success_url": "myaccount.google.com"
            },
            {
                "name": "Zoom", 
                "url": "https://zoom.us/signin",
                "success_url": "zoom.us/profile"
            },
            {
                "name": "–Ø–Ω–¥–µ–∫—Å –¢–µ–ª–µ–º–æ—Å—Ç",
                "url": "https://passport.yandex.ru/auth", 
                "success_url": "yandex.ru"
            },
            {
                "name": "–ö–æ–Ω—Ç—É—Ä.–¢–æ–ª–∫",
                "url": "https://login.contour.ru/",
                "success_url": "contour.ru"
            }
        ]
        
        for i, platform in enumerate(platforms, 1):
            print(f"\n{i}. üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ {platform['name']}")
            print(f"   URL: {platform['url']}")
            
            try:
                driver.get(platform['url'])
                print("   üìù –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç...")
                print("   ‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
                
                # –ñ–¥–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ (–¥–æ 5 –º–∏–Ω—É—Ç)
                WebDriverWait(driver, 300).until(
                    lambda d: platform['success_url'] in d.current_url
                )
                
                print(f"   ‚úÖ {platform['name']} - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º cookies –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
                save_cookies(driver, f"cookies_{platform['name'].lower().replace(' ', '_')}.json")
                
            except Exception as e:
                print(f"   ‚ùå {platform['name']} - –æ—à–∏–±–∫–∞: {e}")
                continue
        
        # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        save_cookies(driver, "selenium_cookies.json")
        save_storage(driver, "storage.json")
        
        print("\n" + "=" * 40)
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        print("üìÅ –§–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:")
        print("   - selenium_cookies.json")
        print("   - storage.json")
        print("\nüöÄ –¢–µ–ø–µ—Ä—å –±–æ—Ç –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—Ö–æ–¥–∏—Ç—å –Ω–∞ –≤—Å—Ç—Ä–µ—á–∏!")
        print("\n‚ö†Ô∏è –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!")
        print("üí° –ó–∞–∫—Ä–æ–π—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É.")
        
        # –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É...")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    finally:
        print("\nüëã –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º.")
        # –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        # if driver:
        #     driver.quit()

def save_cookies(driver, filename):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å cookies"""
    try:
        import json
        cookies = driver.get_cookies()
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(cookies, f, indent=2, ensure_ascii=False)
        print(f"   üíæ Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: {filename}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è cookies: {e}")

def save_storage(driver, filename):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å storage –¥–∞–Ω–Ω—ã–µ"""
    try:
        import json
        session_storage = driver.execute_script("return window.sessionStorage;")
        local_storage = driver.execute_script("return window.localStorage;")
        
        storage_data = {
            "sessionStorage": session_storage,
            "localStorage": local_storage,
            "timestamp": time.time()
        }
        
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(storage_data, f, indent=2, ensure_ascii=False)
        print(f"   üíæ Storage —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {filename}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è storage: {e}")

if __name__ == "__main__":
    quick_auth()
